# Datasource
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://${DATABASE_HOSTNAME}:${DATABASE_PORT}/${DATABASE_NAME}?serverTimezone=America/Fortaleza&createDatabaseIfNotExist=true
spring.datasource.username=${DATABASE_USER}
spring.datasource.password=${DATABASE_PASSWORD}

# JPA
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.hibernate.ddl-auto=create-drop

# Actuator
management.endpoints.info.enabled=true
management.endpoints.prometheus.enabled=true
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=health, info, prometheus

# Jaeger
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}
opentracing.jaeger.service-name=${spring.application.name}
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}

# Metricas
management.metrics.tags.aplicacao=${NOME_DA_APLICACAO:serviço de transacoes}
management.metrics.tags.ambiente=${AMBIENTE:desenvolvimento}

# Spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:18080/auth/realms/propostas
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:18080/auth/realms/propostas/protocol/openid-connect/certs

# Hostname dos serviços externos
servicos.analise.host=${ANALISE_SOLICITANTE_URL}
servicos.cartao.host=${CARTAO_RESOURCE_URL}


# Endereço do Kafka
spring.kafka.bootstrap-servers=${KAFKA_HOST:localhost:9092}

# Formato da chave (String) recebida!
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Formato da mensagem \ evento (JSON) recebida(o)!
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

# Identificador do grupo de consumo
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP_ID:minha-aplicacao}

# Modelo de coleta do consumidor (latest, earliest, none)
spring.kafka.consumer.auto-offset-reset=${KAFKA_AUTO-OFFSET-RESET:latest}

# Topico de transacao
spring.kafka.topic.transactions=${TRANSACTION_TOPIC:transacoes}